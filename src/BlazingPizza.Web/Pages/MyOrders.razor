@page "/myorders"
@inject IHttpClientFactory HttpClientFactory
@attribute [Authorize]

<div class="main">
    <TemplatedList Loader="LoadOrders" ListGroupClass="orders-list">
        <Loading>Loading...</Loading>
        <Empty>
            <h2>No orders placed</h2>
            <a class="btn btn-success" href="">Order some pizza</a>
        </Empty>
        <Item Context="item">
            <div class="col">
                <h5>@item.Order.CreatedTime.ToLongDateString()</h5>
                Items:
                <strong>@item.Order.Pizzas.Count()</strong>;
                Total price:
                <strong>£@item.Order.GetFormattedTotalPrice()</strong>
            </div>
            <div class="col">
                Status: <strong>@item.StatusText</strong>
            </div>
            <div class="col flex-grow-0">
                <a href="myorders/@item.Order.OrderId" class="btn btn-success">
                    Track &gt;
                </a>
            </div>
        </Item>
    </TemplatedList>
</div>

@code {
    [CascadingParameter] Task<AuthenticationState> AuthenticationStateTask { get; set; }

    async Task<List<OrderWithStatus>> LoadOrders()
    {
        var authState = await AuthenticationStateTask;
        var client = HttpClientFactory.CreateClient("orders");

        return await client.GetJsonAsync<List<OrderWithStatus>>($"orders/user/{authState.User.Identity.Name}");
    }
}
